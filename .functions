# Reclone a repository
function reclone() {
  default_branch=master
  repository=$1
  branch=${2:$default_branch}

  rm -rf $repository
  git clone -b $2 $repository --depth 5 -p
}

# Reclone a repository and go to it
function rego() {
  repository=$1
  branch=$2

  reclone $repository $branch
  cd $repository
}

# Switch PHP version
function usephp() {
  php="php$1"

  ln -sf `brew list $php | grep bin/php -m 1` /usr/local/bin/php
  ln -sf `brew list $php | grep libphp` /usr/local/lib/libphp5.so
  brew link $php --overwrite
  echo "Switched to $php"
  echo `brew info $php | head -1`

  killall httpd
  sudo apachectl -k stop
  sudo apachectl -k start
}

# PHP CS FIXER
# //////////////////////////////////////////////////////////////////////

PHP_CS_FIXER_LEVEL="symfony"
PHP_CS_FIXER_CONTRIB="align_double_arrow,align_equals,concat_with_spaces,ereg_to_preg,header_comment,multiline_spaces_before_semicolon,no_blank_lines_before_namespace,ordered_use,php4_constructor,phpdoc_order,phpdoc_var_to_type,short_array_syntax"

# Fixes a repository with PSR and tabs
function psrtabs() {
  php-cs-fixer fix $1 --level="$PHP_CS_FIXER_LEVEL" --fixers="-braces,-indentation,-phpdoc_indent,-yoda_conditions,$PHP_CS_FIXER_CONTRIB"
}

# Fixes a repository with PSR and spaces
function psrfix() {
  php-cs-fixer fix $1 --level="$PHP_CS_FIXER_LEVEL" --fixers="-yoda_conditions,$PHP_CS_FIXER_CONTRIB"
}
